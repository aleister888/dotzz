#!/bin/bash

# Script para empezar un contador pomodoro

# Archivo donde se guardará el tiempo restante para que termine el contador
POMODOROFILE=/tmp/pomodoro_timer
# Archivo donde guardaremos los pid de los procesos
PROCESSLIST=/tmp/pomodoro_processes
MY_ID=$BASHPID

# Archivo donde guardaremos si ya se ha completado el tiempo de trabajo
BREAKFILE=/tmp/pomodoro_status

SOUND="/usr/share/sounds/freedesktop/stereo/complete.oga"

# Crear nuevo temporizador
create_timer() {
	local TIMERWORK
	local TIMERBREAK

	TIMERWORK="$(dmenu -p "¿Minutos de trabajo? " </dev/null)"
	[ -z "$TIMERWORK" ] && exit

	TIMERBREAK="$(dmenu -p "¿Minutos de descanso? " </dev/null)"
	[ -z "$TIMERBREAK" ] && exit

	if [ "$TIMERWORK" -ge 61 ] || [ "$TIMERBREAK" -ge 61 ]; then
		notify-send "El tiempo no puede exceder 1 hora"
		exit 1
	fi

	# Guardamos los tiempos en el archivo
	echo "W $((TIMERWORK * 60))" | tee "$POMODOROFILE"
	echo "B $((TIMERBREAK * 60))" | tee -a "$POMODOROFILE"
}

# Cerrar instancias previas del script
close_old() {
	while read -r ID; do
		if [[ "$ID" != "$MY_ID" ]]; then
			kill -9 "$ID" 2>/dev/null
		fi
	done <"$PROCESSLIST"
}
get_status() {
	# El tiempo de trabajo y de pausa se guarda en un archivo como líneas
	local CONTENT
	CONTENT="$(cat "$POMODOROFILE")"
	WORKTIME="$(echo "$CONTENT" | grep -oP "^W \K[0-9]*")"
	BREAKTIME="$(echo "$CONTENT" | grep -oP "^B \K[0-9]*")"
}

timer_count() {
	get_status
	local WORK_COMPLETED="false"

	echo $MY_ID | tee -a $PROCESSLIST >/dev/null

	while [ "$WORKTIME" -gt 0 ] || [ "$BREAKTIME" -gt 0 ]; do
		grep true $BREAKFILE && WORK_COMPLETED="true"
		if [ "$WORKTIME" -gt 0 ]; then
			sed -i "s/^W [0-9]*/W $((WORKTIME - 1))/" \
				"$POMODOROFILE"

			WORKTIME=$((WORKTIME - 1))
		else
			if [ "$WORK_COMPLETED" = "false" ]; then
				echo "true" >$BREAKFILE
				pw-play $SOUND
				notify-send "Hora del descanso"
			fi
			sed -i "s/^B [0-9]*/B $((BREAKTIME - 1))/" \
				"$POMODOROFILE"

			BREAKTIME=$((BREAKTIME - 1))
		fi
		sleep 1
	done

	rm "$POMODOROFILE"
	pw-play $SOUND
	notify-send "Temporizador completado"

	rm "$PROCESSLIST"
	rm "$BREAKFILE"
}

# Si el archivo no existe, creamos un nuevo temporizador
if [ ! -f "$POMODOROFILE" ]; then
	create_timer
	timer_count
# Si existen instancias previas, preguntar al usuario
elif [ "$(cat $PROCESSLIST | wc -l)" -ge 1 ]; then
	PAUSEOPT="Pausar"
	DELETEOPT="Eliminar"
	ELECCION="$(echo -e "$PAUSEOPT\n$DELETEOPT" | dmenu)"

	if [ "$ELECCION" = "$PAUSEOPT" ]; then
		notify-send "Temporizador pausado"
		close_old
		rm "$PROCESSLIST"
	elif [ "$ELECCION" = "$DELETEOPT" ]; then
		rm "$POMODOROFILE"
		notify-send "Temporizador eliminado"
		close_old
		rm "$PROCESSLIST"
		rm "$BREAKFILE"
	fi
else
	notify-send "Temporizador reanudado"
	timer_count
fi
