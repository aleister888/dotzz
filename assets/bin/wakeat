#!/bin/sh

# Script para suspender el sistema hasta cierta hora (HH:MM)

REGULARUSER="$(getent passwd 1000 | cut -d: -f1)"
export DISPLAY=:0
export XDG_RUNTIME_DIR=/run/user/1000

WAIT_MINS=10

# Comprobaciones:

# Verifica que el script se ejecuta como root
if [ "$(id -u)" -ne 0 ]; then
	echo "Error: Este script debe ejecutarse como root." >&2
	exit 1
fi

# Comprueba que el usuario regular existe
if [ -z "$REGULARUSER" ]; then
	echo "Error: No se encontró un usuario regular." >&2
	exit 1
fi

notify() {
	su "$REGULARUSER" -c \
		"notify-send -u critical -i system-error \"$1\""
}

tosleep() {
	TARGET_TIME="$1"
	CURRENT_TIME=$(date +%s)
	WAKE_TIME_TODAY=$(date -d "$(date +%Y-%m-%d) $TARGET_TIME" +%s)

	if [ "$WAKE_TIME_TODAY" -le "$CURRENT_TIME" ]; then
		# Si la hora de reactivación ya pasó, usa la de mañana
		WAKE_TIME=$(date -d "tomorrow $TARGET_TIME" +%s)
	else
		# Si la hora de reactivación aún no ha pasado, usa la de hoy
		WAKE_TIME="$WAKE_TIME_TODAY"
	fi

	if ! rtcwake -m mem -l -t "$WAKE_TIME"; then
		notify "Error al programar la suspensión"
		exit 1
	fi
}

# Validación de entrada: formato HH:MM
if [ -n "$1" ]; then
	if ! echo "$1" | grep -qE '^([01][0-9]|2[0-3]):[0-5][0-9]$'; then
		echo "Formato de hora incorrecto. Usa HH:MM (ej. 07:30)"
		exit 1
	fi
	WAKE_TIME="$1"
else
	WAKE_TIME="07:00"
fi

# Verifica si hay máquinas virtuales corriendo antes de suspender
if command -v virsh >/dev/null 2>&1; then
	VM_COUNT="$(virsh list --state-running --id | grep -cv '^$')"
	if [ "$VM_COUNT" -ge 1 ]; then
		notify "Suspensión cancelada (Máquina virtual activa)"
		exit
	fi
fi

# Si el usuario pasa "now", suspende inmediatamente, en el caso
# contrario, se esperan $WAIT_MINS antes de suspender el equipo.
if [ "$2" != "now" ]; then
	notify "El sistema se suspenderá en $WAIT_MINS minutos"
	sleep $((WAIT_MINS * 60))
fi

tosleep "$WAKE_TIME"
